export function handleSidebar() {
    openCloseSidebar();
    pagesAccess();
}

function openCloseSidebar() {
    const sidebarButtonContainer = document.getElementById("sidebar-icon-container");
    const sidebarContainer = document.getElementById("sidebar-container");
    const overlay = document.getElementById("overlay");

    sidebarButtonContainer?.addEventListener("click", () => {
        sidebarContainer?.classList.toggle("open-close-sidebar");
        if(sidebarContainer?.classList.contains("open-close-sidebar")) {
            if(overlay) {
                overlay.style.display = "none";
            }
        } else {
            if(overlay) {
                overlay.style.display = "block";
            }        }
    });


    overlay?.addEventListener("click", () => {
        sidebarContainer?.classList.add("open-close-sidebar");
        overlay.style.display = "none";
    });
}



function pagesAccess() {
    class sidebarPageRelationship {
        constructor(sidebarId, pageId, pageClass) {
            this.sidebarId = sidebarId;
            this.pageId = pageId;
            this.pageClass = pageClass;
        }

        setRelationship(sidebarId, pageId, pageClass) {
            this.sidebarId = sidebarId;
            this.pageId = pageId;
            this.pageClass = pageClass;
        }

        getSidebarId() {
            return this.sidebarId;
        }

        getPageId() {
            return this.pageId;
        }

        getPageClass() {
            return this.pageClass;
        }
    }


    const sidebarToPageMap = [
        new sidebarPageRelationship("today-sidebar", "today-page", "access-today-page"), 
        new sidebarPageRelationship("tomorrow-sidebar", "tomorrow-page", "access-tomorrow-page"), 
        new sidebarPageRelationship("this-week-sidebar", "this-week-page", "access-this-week-page"), 
        new sidebarPageRelationship("planned-sidebar", "planned-page", "access-planned-page"), 
        new sidebarPageRelationship("completed-sidebar", "completed-page", "access-completed-page"), 
        new sidebarPageRelationship("project1-sidebar", "project1-page", "access-project1-page")
    ];

    let currentSidebarPageRelationship = sidebarToPageMap[0];
    let currentSidebarPage = document.getElementById(currentSidebarPageRelationship.getPageId());
    
    sidebarToPageMap.forEach((relationship) => {
        configureSidebarAction(
            relationship.getSidebarId(),
            relationship.getPageId(),
            relationship.getPageClass()
        );
    });

    function configureSidebarAction(sidebarId, pageId, pageClass) {
        const sidebarElement = document.getElementById(sidebarId);
        const pageElement = document.getElementById(pageId);

        sidebarElement?.addEventListener("click", () => {
            if (sidebarId !== currentSidebarPageRelationship.getSidebarId()) {
                switchPages();
                updateCurrentSidebar();
                closeSidebar();
            } else {
                closeSidebar();
            }
        });

        function switchPages() {
            pageElement?.classList.toggle(pageClass);
            currentSidebarPage?.classList.toggle(currentSidebarPageRelationship.getPageClass());
        }

        function updateCurrentSidebar() {
            const newActiveSidebar = document.getElementById(sidebarId);
            const oldActiveSidebar = document.getElementById(currentSidebarPageRelationship.getSidebarId());
            newActiveSidebar?.classList.toggle("active-task-project");
            oldActiveSidebar?.classList.toggle("active-task-project");
            
            currentSidebarPageRelationship.setRelationship(sidebarId, pageId, pageClass);
            currentSidebarPage = document.getElementById(currentSidebarPageRelationship.getPageId());
        }

        function closeSidebar() {
            const sidebarContainer = document.getElementById("sidebar-container");
            const overlay = document.getElementById("overlay");

            sidebarContainer?.classList.toggle("open-close-sidebar");
            if(overlay) {
                overlay.style.display = "none";
            }
        }
    }
}